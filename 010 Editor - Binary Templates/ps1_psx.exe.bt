//------------------------------------------------
//--- 010 Editor Binary Template
//
//      File: ps1_psx.exe.bt
//   Authors: Laurynas Zubavičius (Sparagas)
//   Version: 0.0
//   Purpose: PS-X EXE template for Sony PlayStation 1 executables
//  Category: Game
// File Mask: 
//  ID Bytes: 50 53 2D 58 20 45 58 45 //PS-X EXE
//   History: 
//   0.0   2025-01-01 Laurynas Zubavičius : Initial version.
//------------------------------------------------

//------------------------------------------------
// Structs
//------------------------------------------------

struct EXEC
{
    uint32   pc0    <format=hex, comment="execution start address">;                                // usually 0x80010000 or higher
    uint32   gp0                <comment="gp register initial value">;                              // usually 0
    uint32   t_addr <format=hex, comment="text and data section lead address with initial value">;  // Destination Address in RAM, usually 0x80010000 or higher in RAM
    uint32   t_size             <comment="text and data section size with initial value">;          // Filesize (must be N*0x800), excluding 0x800-byte header
    uint32   d_addr <format=hex, comment="system reserved">;                                        // usually 0
    uint32   d_size             <comment="system reserved">;                                        // usually 0
    uint32   b_addr <format=hex, comment="data section lead address with no initial value. Exec() clears this section; however, if b_addr is zero, the section doesn’t exist, so it doesn’t get cleared.">;  // Memfill Start Address, usually 0
    uint32   b_size             <comment="data section size with no initial value">;                                                                                                                         // Memfill size in bytes, usually 0
    uint32   s_addr <format=hex, comment="stack area lead address (user specified). Exec() substitutes s_addr+s_size for stack  pointer, unless s_addr is zero.">;                                           // usually 0x801FFFF0 or 0
    uint32   s_size <format=hex, comment="stack area size (user specified)">;                                                                                                                                // usually 0
    uint32   sp                 <comment="register shunt area for  executing Exec()">;  // should be zero-filled in exefile
    uint32   fp                 <comment="register shunt area for  executing Exec()">;  // should be zero-filled in exefile
    uint32   gp                 <comment="register shunt area for  executing Exec()">;  // should be zero-filled in exefile
    uint32   ret                <comment="register shunt area for  executing Exec()">;  // should be zero-filled in exefile
    uint32   base               <comment="register shunt area for  executing Exec()">;  // should be zero-filled in exefile
};

struct XF_HDR
{
    char   key[8]                 <comment="key code">;
    Assert(key == "PS-X EXE");
    uint32 text       <format=hex, comment="position of text section within file">;
    uint32 data       <format=hex, comment="position of data section within data file">;
    EXEC   exec                   <comment="execution file information">;
    char   tittle[60]             <comment="license code">;
};

//------------------------------------------------
// Main
//------------------------------------------------

XF_HDR header                            <comment="execution file header">;
char   padding[1912];
uchar  program_data[header.exec.t_size];
