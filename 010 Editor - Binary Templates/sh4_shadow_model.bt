//------------------------------------------------
//--- 010 Editor v13.0.2 Binary Template
//
//      File: SH4 (PC) shadow mesh.bt
//   Authors: Hunter Stanton (hun10sta)
//   Version: 
//   Purpose: A binary template for Silent Hill 4 PC shadow meshes (aka sgSVModel)
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

// these two are just a guess
typedef struct Polygon
{
    byte a;
    byte b;
    byte c;
    byte d;
} polygon;

typedef struct Edge
{
    byte a;
    byte b;
    byte c;
    byte d;
} edge;

typedef struct VertPosUnk
{
    float x;
    float y;
    float z;
    uint32 unknown; // ?? no clue what this is supposed to be
} VertPosUnk;

typedef struct Mesh
{
    local uint32 start = FTell();

    uint32 size; // (size of everything - the 0x20 byte bones array)? not sure why the bones arent included in this size
    uint32 type; // this implies there could be more than one type of shadow mesh but I've only ever seen 0
    uint32 bones_offset <format=hex>;
    uint32 pad;
    uint32 edges_offset <format=hex>;
    uint32 n_edges;
    uint32 polygons_offset <format=hex>;
    uint32 n_polygons;
    uint32 vertices_offset <format=hex>;
    uint32 n_vertices;
    uint32 normals_offset <format=hex>;
    uint32 n_normals;

    FSeek(start + edges_offset);
    Edge edges[n_edges];

    FSeek(start + polygons_offset);
    Polygon polygons[n_polygons];

    FSeek(start + vertices_offset);
    VertPosUnk vert_pos_unk[n_vertices];

    FSeek(start + bones_offset);
    // int16 bones[16]; // there can be more than 16 bones in a mesh, but for shadow meshes each part is limited to 16 bones
    int8 bones[16]; // there can be more than 16 bones in a mesh, but for shadow meshes each part is limited to 16 bones
} mesh;

struct SGSVModel
{
    uint32 type_id;
    int32 version;
    int32 type;
    uint32 n_meshes;
    uint32 mesh_table_offset <format=hex>;
    uint32 n_bones;
    uint32 matrices_offset <format=hex>;

    FSeek(mesh_table_offset);
    int32 offsets[n_meshes] <format=hex>;

    local int32 i = 0;

    for(i=0; i<n_meshes; i++)
    {
        FSeek(offsets[i]);
        Mesh meshPart;
    }
};

if (GetTemplateName() == "sh4_shadow_model.bt")
    SGSVModel sh4_shadow_model <open=true>;
